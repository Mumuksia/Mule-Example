/*
 * Generated by the Mule project wizard. http://mule.mulesoft.org
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */
package jug;

import org.mule.api.MuleMessage;
import org.mule.module.client.MuleClient;
import org.mule.tck.FunctionalTestCase;
import org.mule.transport.NullPayload;

import java.util.HashMap;

public class MuleexampleTestCase extends FunctionalTestCase
{

    public HashMap headerProps = new HashMap();

    protected String getConfigResources()
    {
        return "mule-config.xml";
    }

    public void testGetTestHTML() throws Exception
    {
        MuleClient client = new MuleClient(muleContext);
        headerProps.put("http.method","GET");
        MuleMessage result = client.send("http://localhost:48310/JUG/GetFunFromHTML/test", null, headerProps);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);
        assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><JUG><NumberOf>50</NumberOf><Victim>Bod'ka</Victim><Theme>test</Theme></JUG>",
                result.getPayloadAsString());
    }

    public void testGetCurrentBankRateXML() throws Exception
    {
        MuleClient client = new MuleClient(muleContext);
        headerProps.put("http.method","GET");
        MuleMessage result = client.send("http://localhost:48310/JUG/GetFunFromXML/test", null, headerProps);
        assertNotNull(result);
        assertNull(result.getExceptionPayload());
        assertFalse(result.getPayload() instanceof NullPayload);
        assertEquals("<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?><JUG><NumberOf>50</NumberOf><Victim>Bod'ka</Victim><Theme>test</Theme></JUG>",
                result.getPayloadAsString());
    }

}
